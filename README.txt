Before running, please ensure the packages listed in requirements.txt are installed. All packages are available through pip.

The program is invoked through the command line as "python GitTopFive.py <token>" where 'token' is a personal access token. If you do not have such a token, one can be generated by signing in to Github.com and navigating to https://github.com/settings/tokens and selecting 'Personal access tokens' from the menu on the left. No permissions need to be granted to this token.

Once the program is running, it will prompt you to input the name of the organization you wish to list the top 5 repositories for. Case does not matter. Output will be printed to the console. Afterwards, the program will wait for another organization, or a 'q' to terminate. If the target organization has less than five repositories, only those will be listed. Repositories are ranked by their total number of pull requests, both open and closed, and ties give priority to the first repository returned by the query. Organizations I used for testing include github, netflix, octobox, railsgirls, and adobe.

A note on rate limit: The GitHub API restricts queries to 5000 per hour. While I have taken steps to minimize the number of calls required, this limit could still be hit if one were to run the program many times in a short period. In this case, the application will give an error message and quit until the rate limit is up.

This program was developed using Python 3.5.3 and run on Windows 10.

Possible improvements for a future iteration include: Allowing users to authenticate with their username and password, or by loading the token from a file. The error handling could also be made robust to the eventuality of the user losing their network connection partway through a query. I could also add the option to print results to a file.
